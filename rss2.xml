<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Chonu</title>
    <link>http://iokanux.com/</link>
    
    <atom:link href="http://iokanux.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>Waiting You</description>
    <pubDate>Wed, 22 Jan 2025 16:37:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Codeforces Round 1000 (Div2,A-C)</title>
      <link>http://iokanux.com/2025/01/23/XCPC/codeforces/Codeforces%20Round%201000%20(Div2,A-C)/</link>
      <guid>http://iokanux.com/2025/01/23/XCPC/codeforces/Codeforces%20Round%201000%20(Div2,A-C)/</guid>
      <pubDate>Thu, 23 Jan 2025 14:53:25 GMT</pubDate>
      
      <description>&lt;p&gt;D题明天补一下&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>D题明天补一下</p><span id="more"></span><h1 id="A"><a href="#A" class="headerlink" title="A"></a>A</h1><p>看样例就懂了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(a!=b) cout&lt;&lt;b-a&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">1</span>) cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="B"><a href="#B" class="headerlink" title="B"></a>B</h1><p>可以发现我们想要换取[l,r]的某几个数，一定是只能从[1,l-1]或者[r+1,n]中的某一个里选</p><p>因为如果两段都存在数的话，由于反转的对称性，最左边的数和最右边的数交换，以此类推，所以一定会使得某个区间的数在和[l,r]区间内的数交换之前被另一个区间消耗掉</p><p>贪心的考虑区间和，选择[l,r]内最大的几个数和两端最小的几个数交换</p><p>容易用优先队列实现</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,l,r;cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;</span><br><span class="line">    priority_queue&lt;<span class="type">int</span>&gt;a;</span><br><span class="line">    priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,greater&lt;<span class="type">int</span>&gt;&gt;lmn,rmn;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;=l&amp;&amp;i&lt;=r)&#123;</span><br><span class="line">            ans+=x;</span><br><span class="line">            a.<span class="built_in">push</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i&lt;l) lmn.<span class="built_in">push</span>(x);</span><br><span class="line">        <span class="keyword">else</span> rmn.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> work=[&amp;](<span class="type">char</span> c)&#123;</span><br><span class="line">        <span class="keyword">auto</span> pq=lmn;<span class="keyword">auto</span> a1=a;</span><br><span class="line">        <span class="keyword">if</span>(c==<span class="string">&#x27;l&#x27;</span>) pq=lmn;</span><br><span class="line">        <span class="keyword">else</span> pq=rmn;</span><br><span class="line">        <span class="type">int</span> res=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(a<span class="number">1.</span><span class="built_in">size</span>()&amp;&amp;pq.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">auto</span> t1=a<span class="number">1.</span><span class="built_in">top</span>();a<span class="number">1.</span><span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">auto</span> t2=pq.<span class="built_in">top</span>();pq.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span>(t1&gt;t2)&#123;</span><br><span class="line">                res+=t1-t2;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;; </span><br><span class="line">    cout&lt;&lt;ans-<span class="built_in">max</span>(<span class="built_in">work</span>(<span class="string">&#x27;l&#x27;</span>),<span class="built_in">work</span>(<span class="string">&#x27;r&#x27;</span>))&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="C"><a href="#C" class="headerlink" title="C"></a>C</h1><p>思路很简单，选择度数最大的两个点然后删除他们</p><p>对于一棵树中的任意一个点来说，每删除它的一条边都会使得图中的连通分量+1</p><p>但是本题要求删边之后将点也删去,这会使得连通分量-1，即每删除一个点，会<strong>增加</strong>度数-1的连通分量数</p><p>正常的思路就是选择度数最大的两个点删去</p><p>唯一问题是当最大的度数的点不唯一时，是有限制的</p><p>当三个度数最大的点相连时，此时删去中间的点会使得两边度数最大的点度数都-1,即会使得答案变差,此时应该避开中间点</p><p>解决方法就是选取任意两个点数最大的点（此时必有一个点为最优解的点），对他们相连的边依次度数-1后取最大值</p><p>最终答案就是两个点度数和-2+最开始的联通量(1)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;de1;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">in</span>(n<span class="number">+1</span>);</span><br><span class="line">    priority_queue&lt;array&lt;<span class="type">int</span>,2&gt;&gt;pq;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="type">int</span> u,v;cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        g[u].<span class="built_in">push_back</span>(v);g[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">        in[u]++;in[v]++;</span><br><span class="line">    &#125;             </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        pq.<span class="built_in">push</span>(&#123;in[i],i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> t=pq.<span class="built_in">top</span>();</span><br><span class="line">    de<span class="number">1.</span><span class="built_in">push_back</span>(t[<span class="number">1</span>]);</span><br><span class="line">    pq.<span class="built_in">pop</span>();</span><br><span class="line">    <span class="keyword">if</span>(pq.<span class="built_in">top</span>()[<span class="number">0</span>]==t[<span class="number">0</span>])&#123;</span><br><span class="line">        de<span class="number">1.</span><span class="built_in">push_back</span>(pq.<span class="built_in">top</span>()[<span class="number">1</span>]);</span><br><span class="line">        pq.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i:de1)&#123;</span><br><span class="line">        <span class="type">int</span> res=in[i];</span><br><span class="line">        <span class="keyword">auto</span> in1=in;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> j:g[i])&#123;</span><br><span class="line">            in1[j]--;</span><br><span class="line">        &#125;</span><br><span class="line">        priority_queue&lt;array&lt;<span class="type">int</span>,2&gt;&gt;pq1;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i!=j) pq<span class="number">1.</span><span class="built_in">push</span>(&#123;in1[j],j&#125;);</span><br><span class="line">        &#125;    </span><br><span class="line">        res+=pq<span class="number">1.</span><span class="built_in">top</span>()[<span class="number">0</span>]; </span><br><span class="line">        ans=<span class="built_in">max</span>(ans,res<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/Codeforces/">Codeforces</category>
      
      
      
      <comments>http://iokanux.com/2025/01/23/XCPC/codeforces/Codeforces%20Round%201000%20(Div2,A-C)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/2025%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A51/</link>
      <guid>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/2025%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A51/</guid>
      <pubDate>Tue, 21 Jan 2025 11:24:11 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;2025牛客寒假算法基础集训营1&quot;&gt;&lt;a href=&quot;#2025牛客寒假算法基础集训营1&quot; class=&quot;headerlink&quot; title=&quot;2025牛客寒假算法基础集训营1&quot;&gt;&lt;/a&gt;2025牛客寒假算法基础集训营1&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="2025牛客寒假算法基础集训营1"><a href="#2025牛客寒假算法基础集训营1" class="headerlink" title="2025牛客寒假算法基础集训营1"></a>2025牛客寒假算法基础集训营1</h1><span id="more"></span><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> ok=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="type">int</span> x;cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>) ok=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ok) cout&lt;&lt;<span class="number">999999999999999989</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">    <span class="keyword">else</span> cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B"><a href="#B" class="headerlink" title="B"></a>B</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">     vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>);</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="type">int</span> u,v;cin&gt;&gt;u&gt;&gt;v;</span><br><span class="line">        g[u].<span class="built_in">push_back</span>(v);</span><br><span class="line">        g[v].<span class="built_in">push_back</span>(u);</span><br><span class="line">     &#125;  </span><br><span class="line">     vector&lt;<span class="type">int</span>&gt;ans;      </span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(g[i].<span class="built_in">size</span>()==<span class="number">1</span>)&#123;</span><br><span class="line">            ans.<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(ans.<span class="built_in">size</span>()!=<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;ans[<span class="number">0</span>]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans[<span class="number">1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C"><a href="#C" class="headerlink" title="C"></a>C</h2><h2 id="D"><a href="#D" class="headerlink" title="D"></a>D</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    <span class="type">int</span> a=<span class="number">-1</span>,b=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> x;cin&gt;&gt;x;</span><br><span class="line">        mp[x]++;</span><br><span class="line">        <span class="keyword">if</span>(a==<span class="number">-1</span>) a=x;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(b==<span class="number">-1</span>&amp;&amp;x!=a) b=x;</span><br><span class="line">    &#125;           </span><br><span class="line">    cout&lt;&lt;((n%<span class="number">2</span>==<span class="number">0</span>&amp;&amp;mp.<span class="built_in">size</span>()==<span class="number">2</span>&amp;&amp;mp[a]==mp[b])?<span class="string">&quot;Yes\n&quot;</span>:<span class="string">&quot;No\n&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2><p>好像挺典的,+1-1最小次数操作使得数组相等,就选中位数</p><p>所以选前半段中位数和后半段中位数，为了特判必须要为两个不同的数，在mid的基础上+-1</p><h2 id="G"><a href="#G" class="headerlink" title="G"></a>G</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">     vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n),p,need;</span><br><span class="line">     <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">     map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=<span class="number">0</span>||a[i]&gt;n)&#123;</span><br><span class="line">            p.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i]&gt;=<span class="number">1</span>&amp;&amp;a[i]&lt;=n&amp;&amp;mp[a[i]]==<span class="number">2</span>)&#123;</span><br><span class="line">            mp[a[i]]--;</span><br><span class="line">            p.<span class="built_in">push_back</span>(a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mp[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            need.<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">if</span>(sum!=(n<span class="number">+1</span>)*n/<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">sort</span>(p.<span class="built_in">begin</span>(),p.<span class="built_in">end</span>());</span><br><span class="line">        <span class="built_in">sort</span>(need.<span class="built_in">begin</span>(),need.<span class="built_in">end</span>());</span><br><span class="line">        <span class="type">int</span> mx=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;p.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            mx+=<span class="built_in">abs</span>(p[i]-need[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;(mx<span class="number">+1</span>)/<span class="number">2</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H"><a href="#H" class="headerlink" title="H"></a>H</h2><p>对于[1,n]的每一个点i,都必须找到某个区间[l,r]，其中l&lt;&#x3D;i&lt;&#x3D;r</p><p>如果有多个区间满足,贪心思想就是找到一个一定不会使得答案变差的方法</p><p>每次遍历到点i时,我们将所有&lt;&#x3D;i的左端点都入队，选取其中最小的右端点，这样一定不会使得答案变差</p><p>因为如果所有待选的r都不同,下一个点一定还有的选；若存在相同r，i&lt;r下一个数还是有解，i&#x3D;&#x3D;r此时产生空选项,无答案,无论哪一种情况都不会使得答案变差</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>,2&gt;&gt;<span class="built_in">a</span>(n<span class="number">+1</span>);</span><br><span class="line">    vector&lt;vector&lt;array&lt;<span class="type">int</span>,2&gt;&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i][<span class="number">0</span>]&gt;&gt;a[i][<span class="number">1</span>];</span><br><span class="line">        g[a[i][<span class="number">0</span>]].<span class="built_in">push_back</span>(&#123;a[i][<span class="number">1</span>],i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">p</span>(n<span class="number">+1</span>,<span class="number">0</span>);</span><br><span class="line">    priority_queue&lt;array&lt;<span class="type">int</span>,2&gt;,vector&lt;array&lt;<span class="type">int</span>,2&gt;&gt;,greater&lt;array&lt;<span class="type">int</span>,2&gt;&gt;&gt;pq;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> [x,y]:g[i])&#123;</span><br><span class="line">            pq.<span class="built_in">push</span>(&#123;x,y&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(pq.<span class="built_in">empty</span>()||pq.<span class="built_in">top</span>()[<span class="number">0</span>]&lt;i)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        p[pq.<span class="built_in">top</span>()[<span class="number">1</span>]]=i;</span><br><span class="line">        pq.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;p[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="J"><a href="#J" class="headerlink" title="J"></a>J</h2><p>A和任意数的gcd一定在A的因子中</p><p>$a_i{XOR}a_j&#x3D;gcd(a_i,a_j)$，等价于$a_j&#x3D;gcd(a_i,a_j)XORa_i$</p><p>我们枚举数组a,同时枚举a的所有因子,如果因子XOR$a_i$存在的话,等价于$a_j$存在</p><p>为了避免重复,我们要求$a_i&gt;a_j$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n);</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        mp[a[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j*j&lt;=a[i];j++)&#123;</span><br><span class="line">            <span class="type">int</span> x=j^a[i];</span><br><span class="line">            <span class="keyword">if</span>(a[i]%j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(x&gt;a[i]&amp;&amp;<span class="built_in">gcd</span>(x,a[i])==j) ans+=mp[x];</span><br><span class="line">            <span class="keyword">if</span>(j*j!=a[i])&#123;</span><br><span class="line">                x=(a[i]/j)^a[i];</span><br><span class="line">                <span class="keyword">if</span>(x&gt;a[i]&amp;&amp;<span class="built_in">gcd</span>(x,a[i])==a[i]/j) ans+=mp[x];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="M"><a href="#M" class="headerlink" title="M"></a>M</h2>]]></content:encoded>
      
      
      
      
      <comments>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/2025%E7%89%9B%E5%AE%A2%E5%AF%92%E5%81%87%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80%E9%9B%86%E8%AE%AD%E8%90%A51/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B77/</link>
      <guid>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B77/</guid>
      <pubDate>Mon, 20 Jan 2025 16:49:59 GMT</pubDate>
      
      <description>&lt;h1 id=&quot;牛客周赛77-E-F&quot;&gt;&lt;a href=&quot;#牛客周赛77-E-F&quot; class=&quot;headerlink&quot; title=&quot;牛客周赛77(E,F)&quot;&gt;&lt;/a&gt;牛客周赛77(E,F)&lt;/h1&gt;</description>
      
      
      
      <content:encoded><![CDATA[<h1 id="牛客周赛77-E-F"><a href="#牛客周赛77-E-F" class="headerlink" title="牛客周赛77(E,F)"></a>牛客周赛77(E,F)</h1><span id="more"></span><h2 id="E"><a href="#E" class="headerlink" title="E"></a>E</h2>]]></content:encoded>
      
      
      
      
      <comments>http://iokanux.com/2025/01/21/XCPC/%E7%89%9B%E5%AE%A2%E7%B3%BB%E5%88%97%E8%B5%9B/%E7%89%9B%E5%AE%A2%E5%91%A8%E8%B5%9B77/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2023ICPC合肥</title>
      <link>http://iokanux.com/2024/11/10/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2023ICPC%E5%90%88%E8%82%A5/</link>
      <guid>http://iokanux.com/2024/11/10/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2023ICPC%E5%90%88%E8%82%A5/</guid>
      <pubDate>Sun, 10 Nov 2024 11:03:33 GMT</pubDate>
      
      <description>&lt;p&gt;已补E,F,G,J&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>已补E,F,G,J</p><span id="more"></span><p><a href="https://mirror.codeforces.com/gym/104857/problem/F">F - Colorful Balloons</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">     <span class="type">int</span> k=n;</span><br><span class="line">     map&lt;string,<span class="type">int</span>&gt;mp;</span><br><span class="line">     <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        string s;cin&gt;&gt;s;</span><br><span class="line">        mp[s]++;</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,mp[s]);</span><br><span class="line">     &#125;        </span><br><span class="line">     <span class="keyword">for</span>(<span class="keyword">auto</span> [s,i]:mp)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&gt;k/<span class="number">2</span>)&#123;</span><br><span class="line">            cout&lt;&lt;s&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     cout&lt;&lt;<span class="string">&quot;uh-oh\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/gym/104857/problem/E">E - Matrix Distances</a></p><p>考虑对x和y的贡献分开进行计算</p><p>相同颜色中，排序后的下为i的x的贡献值为</p><p>$\sum_1^i(a[i].first-a[j].first)+\sum_i^{end}(a[j].first-a[i].first)$</p><p>对该式子化简后可得</p><p>$a[i].first*(i-1)-\sum_1^ia[j].first+\sum_i^{end}a[j].first-(end-i)*a[i].first$</p><p>y的贡献同理</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(m<span class="number">+1</span>));</span><br><span class="line">    map&lt;<span class="type">int</span>,vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">            mp[g[i][j]].<span class="built_in">push_back</span>(&#123;i,j&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">auto</span> work=[&amp;]()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;[x,y]:mp)&#123;</span><br><span class="line">            <span class="built_in">sort</span>(y.<span class="built_in">begin</span>(),y.<span class="built_in">end</span>(),[&amp;](<span class="keyword">auto</span> l,<span class="keyword">auto</span> r)&#123;</span><br><span class="line">                <span class="keyword">return</span> l.first&lt;r.first;</span><br><span class="line">            &#125;);</span><br><span class="line">            vector&lt;<span class="type">int</span>&gt;<span class="built_in">pre</span>(y.<span class="built_in">size</span>()<span class="number">+10</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;y.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                pre[i<span class="number">+1</span>]=pre[i]+y[i].first;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=y.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">                <span class="type">int</span> l=i<span class="number">-1</span>,r=y.<span class="built_in">size</span>()-i;</span><br><span class="line">                ans+=l*y[i<span class="number">-1</span>].first-pre[i<span class="number">-1</span>]+pre[y.<span class="built_in">size</span>()]-pre[i]-r*y[i<span class="number">-1</span>].first;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="built_in">work</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;[x,y]:mp)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;[x1,y1]:y)&#123;</span><br><span class="line">            <span class="built_in">swap</span>(x1,y1);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">work</span>();</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/gym/104857/problem/J">J - Takeout Delivering</a></p><p>开始的想法很朴素，正反跑两边dijkstra，求出每个点到点1和点n的最长距离</p><p>然后遍历所有点i，使得两条最长边分别确定在1-i与i-n之间，求出两边之和的最小值</p><p>这样有一个显然的错误就是可能会存在两条最长边在一边的情况，最终使得求出的答案小于正确答案</p><p>为了解决这种情况，我们将点的遍历改为边的遍历，确定该边为这条路径上的最长边，这样次长边一定是在该边的两端的两个顶点分别到点1和点n的距离</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n, m;cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    vector&lt;vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;&gt;<span class="built_in">g</span>(n + <span class="number">1</span>);</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>, 3&gt;&gt;edge;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>;i &lt;= m;i++) &#123;</span><br><span class="line">        <span class="type">int</span> u, v, w;cin &gt;&gt; u &gt;&gt; v &gt;&gt; w;</span><br><span class="line">        g[u].<span class="built_in">push_back</span>(&#123; v,w &#125;);</span><br><span class="line">        g[v].<span class="built_in">push_back</span>(&#123; u,w &#125;);</span><br><span class="line">        edge.<span class="built_in">push_back</span>(&#123; u,v,w &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">dis1</span>(n + <span class="number">10</span>, <span class="number">1e18</span>), <span class="built_in">dis2</span>(n + <span class="number">10</span>, <span class="number">1e18</span>);</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">st1</span>(n + <span class="number">10</span>, <span class="number">0</span>), <span class="built_in">st2</span>(n + <span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">auto</span> dig1 = [&amp;](<span class="type">int</span> fi, <span class="type">int</span> se) &#123;</span><br><span class="line">        priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;&gt;&gt;heap;</span><br><span class="line">        heap.<span class="built_in">push</span>(&#123; <span class="number">0</span>, fi &#125;);</span><br><span class="line">        dis1[fi] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (heap.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> [d, u] = heap.<span class="built_in">top</span>();heap.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (st1[u]) <span class="keyword">continue</span>;</span><br><span class="line">            st1[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> [i, w] : g[u]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">max</span>(w, dis1[u]) &lt; dis1[i]) &#123;</span><br><span class="line">                    dis1[i] = <span class="built_in">max</span>(w, dis1[u]);</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123; dis1[i],i &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="keyword">auto</span> dig2 = [&amp;](<span class="type">int</span> fi, <span class="type">int</span> se) &#123;</span><br><span class="line">        priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;&gt;&gt;heap;</span><br><span class="line">        heap.<span class="built_in">push</span>(&#123; <span class="number">0</span>, fi &#125;);</span><br><span class="line">        dis2[fi] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (heap.<span class="built_in">size</span>()) &#123;</span><br><span class="line">            <span class="keyword">auto</span> [d, u] = heap.<span class="built_in">top</span>();heap.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="keyword">if</span> (st2[u]) <span class="keyword">continue</span>;</span><br><span class="line">            st2[u] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">auto</span> [i, w] : g[u]) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">max</span>(w, dis2[u]) &lt; dis2[i]) &#123;</span><br><span class="line">                    dis2[i] = <span class="built_in">max</span>(w, dis2[u]);</span><br><span class="line">                    heap.<span class="built_in">push</span>(&#123; dis2[i],i &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    <span class="built_in">dig1</span>(<span class="number">1</span>, n);</span><br><span class="line">    <span class="built_in">dig2</span>(n, <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">1e18</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> i : edge) &#123;</span><br><span class="line">        <span class="keyword">auto</span> [u, v, w] = i;</span><br><span class="line">        <span class="keyword">if</span> (w &gt;= dis1[u] &amp;&amp; w &gt;= dis2[v]) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(dis1[u], dis2[v]) + w);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (w &gt;= dis2[u] &amp;&amp; w &gt;= dis1[v]) &#123;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">max</span>(dis2[u], dis1[v]) + w);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/gym/104857/problem/G">G - Streak Manipulation</a></p><p>看到多项，每项都有选&#x2F;不选求最优解的问题，可以想到dp</p><p>为求第k长的1串长度，可以想到二分，每次在二分里状态转移</p><p>观察到k数字很小</p><p>$dp[i][j][k]$表示前i个字符中有j个1串长度大于等于二分值mid的最小代价，k表示第i个字符是0还是1</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="type">int</span> n,m,k;cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">     string s;cin&gt;&gt;s;</span><br><span class="line">     s=<span class="string">&quot; &quot;</span>+s;</span><br><span class="line">     vector&lt;<span class="type">int</span>&gt;<span class="built_in">pre</span>(n<span class="number">+1</span>,<span class="number">0</span>);</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        pre[i]=pre[i<span class="number">-1</span>]+(s[i]==<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     vector&lt;vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;&gt;<span class="built_in">dp</span>(n<span class="number">+1</span>,vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;(k<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">2</span>,<span class="number">1e9</span>)));</span><br><span class="line">     <span class="keyword">auto</span> check=[&amp;](<span class="type">int</span> x)&#123;</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=k;j++)&#123;</span><br><span class="line">                dp[i][j][<span class="number">0</span>]=<span class="number">1e9</span>;</span><br><span class="line">                dp[i][j][<span class="number">1</span>]=<span class="number">1e9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">         dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=k;j++)&#123;</span><br><span class="line">               <span class="keyword">if</span>(s[i]==<span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                  dp[i][j][<span class="number">0</span>]=<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j][<span class="number">0</span>],dp[i<span class="number">-1</span>][j][<span class="number">1</span>]);</span><br><span class="line">                  <span class="comment">//将该位置0,只能是当前位置是0,此时不用付代价</span></span><br><span class="line">               &#125;                </span><br><span class="line">               dp[i][j][<span class="number">1</span>]=<span class="built_in">min</span>(dp[i<span class="number">-1</span>][j][<span class="number">0</span>],dp[i<span class="number">-1</span>][j][<span class="number">1</span>])+(s[i]==<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">               <span class="keyword">if</span>(i&gt;=x&amp;&amp;j&gt;=<span class="number">1</span>)&#123; </span><br><span class="line">                   dp[i][j][<span class="number">1</span>]=<span class="built_in">min</span>(dp[i-x][j<span class="number">-1</span>][<span class="number">0</span>]+pre[i]-pre[i-x],dp[i][j][<span class="number">1</span>]);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="built_in">min</span>(dp[n][k][<span class="number">1</span>],dp[n][k][<span class="number">0</span>])&lt;=m;</span><br><span class="line">     &#125;;</span><br><span class="line">     <span class="type">int</span> l=<span class="number">-1</span>,r=n<span class="number">+1</span>;</span><br><span class="line">     <span class="keyword">while</span>(l<span class="number">+1</span>!=r)&#123;</span><br><span class="line">        <span class="type">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid)) l=mid;</span><br><span class="line">        <span class="keyword">else</span> r=mid;</span><br><span class="line">     &#125;        </span><br><span class="line">     <span class="keyword">if</span>(l!=<span class="number">0</span>) cout&lt;&lt;l&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">     <span class="keyword">else</span> cout&lt;&lt;l<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/">XCPC系列赛</category>
      
      
      
      <comments>http://iokanux.com/2024/11/10/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2023ICPC%E5%90%88%E8%82%A5/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>2024CCPC哈尔滨</title>
      <link>http://iokanux.com/2024/11/09/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2024CCPC%E5%93%88%E5%B0%94%E6%BB%A8/</link>
      <guid>http://iokanux.com/2024/11/09/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2024CCPC%E5%93%88%E5%B0%94%E6%BB%A8/</guid>
      <pubDate>Sat, 09 Nov 2024 11:03:33 GMT</pubDate>
      
      <description>&lt;p&gt;已补C,G,M,K,&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>已补C,G,M,K,</p><span id="more"></span>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/">XCPC系列赛</category>
      
      
      
      <comments>http://iokanux.com/2024/11/09/XCPC/XCPC%E7%B3%BB%E5%88%97%E8%B5%9B/2024CCPC%E5%93%88%E5%B0%94%E6%BB%A8/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>高斯消元</title>
      <link>http://iokanux.com/2024/11/07/XCPC/XCPC%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%95%B0%E8%AE%BA/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/</link>
      <guid>http://iokanux.com/2024/11/07/XCPC/XCPC%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%95%B0%E8%AE%BA/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/</guid>
      <pubDate>Thu, 07 Nov 2024 05:40:25 GMT</pubDate>
      
      <description>&lt;p&gt;高斯消元法解线性方程组&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>高斯消元法解线性方程组</p><span id="more"></span><p>高斯消元的目的是将矩阵变为上三角矩阵</p><ol><li><p>选定未被选择过的、xi项系数绝对值最大的一行（这样更加容易判断是否有解），将整个式子除以xi的系数（xi系数化为1）。同时将其交换至第i行（方便求解）</p></li><li><p>将未被选择过的行中的该项全部按照系数相应的减去选定的那行的系数（剩下的其他行xi系数化为0）</p><p>当所有行都选定过时，已经构成了上三角</p></li><li><p>倒序求解，每次将常数减去已经求出的所有项的解，此时可以求出当前项的解（将已知解带入求未知解）最后依次输出即可</p></li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">gao&#x27;si</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">double</span>&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">double</span>&gt;(n<span class="number">+2</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n<span class="number">+1</span>;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">auto</span> Gauss=[&amp;]()&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> now=i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(<span class="built_in">fabs</span>(g[now][i])&lt;<span class="built_in">fabs</span>(g[j][i]))&#123;</span><br><span class="line">                    now=j;<span class="comment">//找出当前项系数的绝对值的最大值 </span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n<span class="number">+1</span>;j++)&#123;<span class="comment">//将其放在对应的行,方便计算</span></span><br><span class="line">                <span class="built_in">swap</span>(g[now][j],g[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">abs</span>(g[i][i]<span class="number">-0.0</span>)&lt;<span class="number">1e-4</span>)&#123;</span><br><span class="line">            <span class="comment">//如果此时绝对值最大系数已经为0           </span></span><br><span class="line">            <span class="comment">//则证明此方程组无解 </span></span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;No Solution&quot;</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>; </span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                <span class="comment">//此处写return只是退出函数</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;=n<span class="number">+1</span>;++j)&#123;</span><br><span class="line">            <span class="comment">//将系数化为1 </span></span><br><span class="line">               g[i][j]/=g[i][i];</span><br><span class="line">            &#125;</span><br><span class="line">            g[i][i]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="comment">//在其他式子中将此项系数化为0 </span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> k=i<span class="number">+1</span>;k&lt;=n<span class="number">+1</span>;k++)&#123;</span><br><span class="line">                    g[j][k]-=g[j][i]*g[i][k];</span><br><span class="line">                &#125;</span><br><span class="line">                g[j][i]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;    </span><br><span class="line">    <span class="built_in">Gauss</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n;i&gt;=<span class="number">1</span>;--i)&#123;</span><br><span class="line">    <span class="comment">//倒着求解即可 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">+1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">        <span class="comment">//减去后面所有已经求出解的值 </span></span><br><span class="line">            g[i][n<span class="number">+1</span>]-=g[i][j]*g[j][n<span class="number">+1</span>];</span><br><span class="line">            g[i][j]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        g[i][n<span class="number">+1</span>]/=g[i][i];   <span class="comment">//只剩下当前的未知量以及常数量（其实没必要除，因为已经是1了） </span></span><br><span class="line">        g[i][i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;fixed&lt;&lt;<span class="built_in">setprecision</span>(<span class="number">2</span>)&lt;&lt;g[i][n<span class="number">+1</span>]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/XCPC%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/">XCPC算法学习</category>
      
      <category domain="http://iokanux.com/categories/XCPC/XCPC%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%95%B0%E8%AE%BA/">数论</category>
      
      
      
      <comments>http://iokanux.com/2024/11/07/XCPC/XCPC%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%95%B0%E8%AE%BA/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Codeforces Round 981 (Div3,A-F)</title>
      <link>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20981%20(Div.%203)/</link>
      <guid>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20981%20(Div.%203)/</guid>
      <pubDate>Mon, 21 Oct 2024 07:40:25 GMT</pubDate>
      
        
        
      <description>&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://mirror.codeforces.com/contest/2033/problem/A&quot;&gt;A - Sakurako and Kosuke&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;hi</description>
        
      
      
      
      <content:encoded><![CDATA[<span id="more"></span><p><a href="https://mirror.codeforces.com/contest/2033/problem/A">A - Sakurako and Kosuke</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    <span class="type">int</span> m=<span class="number">1</span>,cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&amp;<span class="number">1</span>)&#123;</span><br><span class="line">            cnt-=(<span class="number">2</span>*i<span class="number">-1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cnt+=(<span class="number">2</span>*i<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">abs</span>(cnt)&lt;=n)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            m=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;            </span><br><span class="line">    cout&lt;&lt;(m&amp;<span class="number">1</span>?<span class="string">&quot;Kosuke&quot;</span>:<span class="string">&quot;Sakurako&quot;</span>)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2033/problem/B"> B - Sakurako and Water</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">int</span>&gt;&gt;<span class="built_in">g</span>(n<span class="number">+1</span>,<span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(n<span class="number">+1</span>));</span><br><span class="line">    map&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            cin&gt;&gt;g[i][j];</span><br><span class="line">            <span class="keyword">if</span>(g[i][j]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                mp[i-j].<span class="built_in">push_back</span>(<span class="built_in">abs</span>(g[i][j]));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;[x,y]:mp)&#123;</span><br><span class="line">        <span class="built_in">sort</span>(y.<span class="built_in">begin</span>(),y.<span class="built_in">end</span>(),<span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">        ans+=y[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2033/problem/C">C - Sakurako’s Field Trip</a></p><p>C这个题有一点说法，其实想明白什么时候换就可以</p><p>从左到n&#x2F;2的位置每次考虑是否交换当前位置，当i这个位置与i-1的数相同的时候或者n-i+1与其下一个数（就是当前数与其遍历过的上一个数）相同的时候选择交换，可以证明这样操作对答案的增益一定是非负的</p><p>证明如下</p><ol><li><p>如果a[i]&#x3D;&#x3D;a[n-i+1]，操作无影响</p></li><li><p>a[i]!&#x3D;a[n-i+1]，</p><p>设交换之前点i对答案的增益为 ans&#x3D;(a[i]&#x3D;&#x3D;a[i-1]+a[i]&#x3D;&#x3D;a[i+1]+a[n-i+1]&#x3D;&#x3D;a[n-i]+a[n-i+1]&#x3D;&#x3D;a[n-i+2])</p><p>交换之后点i对答案的增益为 ans1&#x3D;(a[n-i+1]&#x3D;&#x3D;a[i-1]+a[n-i+1]&#x3D;&#x3D;a[i+1]+a[i]&#x3D;&#x3D;a[n-i]+a[i]&#x3D;&#x3D;a[n-i+2])</p><p>最坏情况就是</p><p>a[i]&#x3D;&#x3D;a[i-1]&amp;&amp;a[i]!&#x3D;a[i+1]&amp;&amp;a[n-i+1]!&#x3D;a[n-i]&amp;&amp;a[n-i+1]!&#x3D;a[n-i+2]</p><p>a[n-i+1]&#x3D;&#x3D;a[i+1]&amp;&amp;a[i]&#x3D;&#x3D;a[n-i]&amp;&amp;a[i]&#x3D;&#x3D;a[n-i+2]</p><p>这样的话，交换之后答案多2，但是这种情况下在下一次交换过程中会被重新满足条件执行交换</p></li></ol><p>综上，一直执行交换，最后求答案即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n<span class="number">+10</span>,<span class="number">0</span>),<span class="built_in">cnt</span>(n<span class="number">+1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=(n<span class="number">+1</span>)/<span class="number">2</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==a[i<span class="number">-1</span>]||a[n-i<span class="number">+1</span>]==a[n-i<span class="number">+2</span>])&#123;</span><br><span class="line">            <span class="built_in">swap</span>(a[i],a[n-i<span class="number">+1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==a[i<span class="number">+1</span>]) ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2033/problem/D">D - Kousuke’s Assignment</a></p><p>没啥说的，遇到0就断开一定是最优的</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n<span class="number">+1</span>),<span class="built_in">pre</span>(n<span class="number">+1</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        pre[i]=pre[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>,lst=<span class="number">0</span>;</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            lst=i;ans++;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> d=pre[i]-pre[lst];</span><br><span class="line">        <span class="keyword">if</span>(d==<span class="number">0</span>)&#123; </span><br><span class="line">            <span class="keyword">if</span>(lst&lt;i)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                lst=<span class="built_in">max</span>(i,lst);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(mp.<span class="built_in">count</span>(d))&#123;</span><br><span class="line">            <span class="keyword">if</span>(lst&lt;mp[d])&#123;</span><br><span class="line">                 ans++;</span><br><span class="line">                lst=<span class="built_in">max</span>(i,lst);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        mp[d]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2033/problem/E">E - Sakurako, Kosuke, and the Permutation</a></p><p>每次交换完之后就保证当前位置不再交换,这样顺序从1到n就是最小交换次数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">     vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n<span class="number">+1</span>),<span class="built_in">pos</span>(n<span class="number">+1</span>);</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        pos[a[i]]=i;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">         <span class="keyword">if</span>(a[i]==i) <span class="keyword">continue</span>;</span><br><span class="line">         <span class="keyword">if</span>(pos[i]==a[i]&amp;&amp;a[a[i]]==i) <span class="keyword">continue</span>;</span><br><span class="line">         <span class="built_in">swap</span>(a[pos[i]],a[a[i]]);</span><br><span class="line">         <span class="built_in">swap</span>(pos[a[pos[i]]],pos[a[a[i]]]);</span><br><span class="line">         ans++;</span><br><span class="line">     &#125;</span><br><span class="line">     cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2033/problem/F">F - Kosuke’s Sloth</a></p><p>递推数列具有模周期性，找到第一个循环节中的下标再乘n即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,k;cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">f[<span class="number">1</span>]=f[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> pos=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;=<span class="number">3</span>) f[i]=(f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>])%k;</span><br><span class="line"><span class="keyword">if</span>(f[i]%k==<span class="number">0</span>)&#123;</span><br><span class="line">pos=i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;(pos%mod)*(n%mod)%mod&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/Codeforces/">Codeforces</category>
      
      
      
      <comments>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20981%20(Div.%203)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Codeforces Round 980 (Div2,A-D)</title>
      <link>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20980%20(Div.%202)/</link>
      <guid>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20980%20(Div.%202)/</guid>
      <pubDate>Mon, 21 Oct 2024 07:40:25 GMT</pubDate>
      
        
        
      <description>&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://mirror.codeforces.com/contest/2024/problem/A&quot;&gt;A - Profitable Interest Rate&lt;/a&gt;&lt;/p&gt;
&lt;figure clas</description>
        
      
      
      
      <content:encoded><![CDATA[<span id="more"></span><p><a href="https://mirror.codeforces.com/contest/2024/problem/A">A - Profitable Interest Rate</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> a,b;cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    <span class="keyword">if</span>(a&gt;=b)&#123;</span><br><span class="line">        cout&lt;&lt;a&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="type">int</span> k=<span class="number">2</span>*a-b;</span><br><span class="line">        <span class="keyword">if</span>(k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;k&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;            </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2024/problem/B">B - Buying Lemonade</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="type">int</span> n,k;cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">   vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i];</span><br><span class="line">   <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>());</span><br><span class="line">   <span class="type">int</span> sum=<span class="number">0</span>,ans=<span class="number">0</span>,mn=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">      a[i]-=mn;</span><br><span class="line">      <span class="keyword">if</span>(sum+a[i]*(n-i)&lt;k)&#123;</span><br><span class="line">         sum+=a[i]*(n-i);</span><br><span class="line">         mn+=a[i];ans+=a[i]*(n-i);</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">         ans+=k-sum;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">      &#125;  </span><br><span class="line">      ans++; </span><br><span class="line">   &#125;     </span><br><span class="line">   cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2024/problem/C">C - Concatenation of Arrays</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">    vector&lt;array&lt;<span class="type">int</span>,3&gt;&gt;<span class="built_in">a</span>(n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i][<span class="number">0</span>]&gt;&gt;a[i][<span class="number">1</span>];</span><br><span class="line">        a[i][<span class="number">2</span>]=a[i][<span class="number">0</span>]+a[i][<span class="number">1</span>];</span><br><span class="line">    &#125;     </span><br><span class="line">    <span class="built_in">sort</span>(a.<span class="built_in">begin</span>(),a.<span class="built_in">end</span>(),[&amp;](<span class="keyword">auto</span> l,<span class="keyword">auto</span> r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l[<span class="number">2</span>]!=r[<span class="number">2</span>])<span class="keyword">return</span> l[<span class="number">2</span>]&lt;r[<span class="number">2</span>]; </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">min</span>(l[<span class="number">0</span>],l[<span class="number">1</span>])&lt;<span class="built_in">min</span>(r[<span class="number">0</span>],r[<span class="number">1</span>]);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        cout&lt;&lt;a[i][<span class="number">0</span>]&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a[i][<span class="number">1</span>]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://mirror.codeforces.com/contest/2024/problem/D">D - Skipping</a></p><p>只有答题才能得分，所以跳题相当于花费a[i]从位置i转移到b[i]</p><p>答题就是花费0从i转移到i-1</p><p>最终答案就是所有能遍历到的位置上的a[i]-cost[i]</p><p>b[i]小于等于i时选择跳过是不明智的，因为此时在到达b[i]的过程中通过答题到b[i]能获得的分数一定更大</p><p>i 到 j 有两种方法，第一种是 j&#x3D;b[i]，直接从 i 跳到 j ；第二种是 i&lt;j&lt;b[i] ，从 i 跳到 b[i] 再向左答题到 j，两种方法的花费都是a[i]，</p><p>所以我们遍历所有位置，每次取能到当前位置且花费最小，转移到当前位置求每个能遍历到的位置的最小花费</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">   <span class="type">int</span> n;cin&gt;&gt;n;</span><br><span class="line">   vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;<span class="built_in">a</span>(n<span class="number">+1</span>);</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i].first;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i].second;</span><br><span class="line">   priority_queue&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;,vector&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;,greater&lt;pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt;&gt;&gt;pq;</span><br><span class="line">   pq.<span class="built_in">push</span>(&#123;a[<span class="number">1</span>].first,a[<span class="number">1</span>].second&#125;);</span><br><span class="line">   vector&lt;<span class="type">int</span>&gt;<span class="built_in">dp</span>(n<span class="number">+1</span>,<span class="number">1e18</span>);</span><br><span class="line">   dp[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">      <span class="keyword">while</span>(pq.<span class="built_in">size</span>()&amp;&amp;pq.<span class="built_in">top</span>().second&lt;i)&#123;</span><br><span class="line">         pq.<span class="built_in">pop</span>();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(pq.<span class="built_in">empty</span>())&#123;</span><br><span class="line">         <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      dp[i]=pq.<span class="built_in">top</span>().first;   </span><br><span class="line">      <span class="keyword">if</span>(a[i].second&gt;i)&#123;</span><br><span class="line">         pq.<span class="built_in">push</span>(&#123;dp[i]+a[i].first,a[i].second&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;  </span><br><span class="line">   <span class="type">int</span> sum=<span class="number">0</span>,ans=<span class="number">0</span>;          </span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">      sum+=a[i].first;</span><br><span class="line">      ans=<span class="built_in">max</span>(ans,sum-dp[i]);</span><br><span class="line">   &#125;</span><br><span class="line">   cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/Codeforces/">Codeforces</category>
      
      
      
      <comments>http://iokanux.com/2024/10/21/XCPC/codeforces/Codeforces%20Round%20980%20(Div.%202)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Educational Codeforces Round 171 (Rated for Div. 2,A-D)</title>
      <link>http://iokanux.com/2024/10/21/XCPC/codeforces/Educational%20Codeforces%20Round%20171%20(Rated%20for%20Div.%202)/</link>
      <guid>http://iokanux.com/2024/10/21/XCPC/codeforces/Educational%20Codeforces%20Round%20171%20(Rated%20for%20Div.%202)/</guid>
      <pubDate>Mon, 21 Oct 2024 07:40:25 GMT</pubDate>
      
        
        
      <description>&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;p&gt;&lt;a href=&quot;https://mirror.codeforces.com/contest/2026/problem/A&quot;&gt;A - Perpendicular Segments&lt;/a&gt;&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<span id="more"></span><p><a href="https://mirror.codeforces.com/contest/2026/problem/A">A - Perpendicular Segments</a></p>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/Codeforces/">Codeforces</category>
      
      
      
      <comments>http://iokanux.com/2024/10/21/XCPC/codeforces/Educational%20Codeforces%20Round%20171%20(Rated%20for%20Div.%202)/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Educational Codeforces Round 170 (Rated for Div.2)</title>
      <link>http://iokanux.com/2024/10/15/XCPC/codeforces/Educational%20Codeforces%20Round%20170%20(Rated%20for%20Div.%202)/</link>
      <guid>http://iokanux.com/2024/10/15/XCPC/codeforces/Educational%20Codeforces%20Round%20170%20(Rated%20for%20Div.%202)/</guid>
      <pubDate>Tue, 15 Oct 2024 06:53:25 GMT</pubDate>
      
        
        
      <description>&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;

&lt;h1 id=&quot;D-Attribute-Checks&quot;&gt;&lt;a href=&quot;#D-Attribute-Checks&quot; class=&quot;headerlink&quot; title=&quot;D - Attribute Checks&quot;&gt;&lt;/a&gt;&lt;a hr</description>
        
      
      
      
      <content:encoded><![CDATA[<span id="more"></span><h1 id="D-Attribute-Checks"><a href="#D-Attribute-Checks" class="headerlink" title="D - Attribute Checks"></a><a href="https://mirror.codeforces.com/contest/2025/problem/D">D - Attribute Checks</a></h1><p>$设&gt;0为s技能点,小于0为t技能点$</p><p>$dp[i][j]$表示前i个位置加了j个s技能点,自然在前i个位置加了i*m-j个t技能点</p>]]></content:encoded>
      
      
      <category domain="http://iokanux.com/categories/XCPC/">XCPC</category>
      
      <category domain="http://iokanux.com/categories/XCPC/Codeforces/">Codeforces</category>
      
      
      <category domain="http://iokanux.com/tags/dp/">dp</category>
      
      
      <comments>http://iokanux.com/2024/10/15/XCPC/codeforces/Educational%20Codeforces%20Round%20170%20(Rated%20for%20Div.%202)/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
